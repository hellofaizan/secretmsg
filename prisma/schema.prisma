// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                       String   @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?
    createdAt                DateTime @default(now())

    @@unique([provider, providerAccountId])
}

enum Role {
    USER
    ADMIN
}

model User {
    id                String       @id @default(cuid())
    name              String?
    image             String?
    email             String?      @unique
    emailVerified     DateTime?
    emoji             String?
    username          String?      @unique
    usernameUpdatedAt DateTime?
    about             String?      @default("New to Pouzz App, send me ananymous confessions!")
    joinedAt          DateTime?    @default(now())
    role              Role         @default(USER)
    pageVisits        PageVisits[]
    accounts          Account[]
    messages          Message[]
}

model PageVisits {
    id             Int      @id @default(autoincrement())
    ip             String?
    country        String?
    city           String?
    userAgent      String?
    browser        String?
    browserVersion String?
    os             String?
    osVersion      String?
    referrer       String?
    referrerType   String?
    referringURL   String?
    device         String?
    language       String?
    latitude       Float?
    longitude      Float?
    timestamp      DateTime @default(now())
    userId         String
    visitorId      String?
    user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Message {
    id        Int      @id @default(autoincrement())
    ip        String?
    city      String?
    country   String?
    latitude  Float?
    longitude Float?
    content   String
    timestamp DateTime @default(now())
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
